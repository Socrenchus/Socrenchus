class ClientTests
  
  #insert new post - not tested for client
  try_client_insert_post: ->
    content = "This post generated by try client insert post"
    Posts.insert({content: content})
    #tron.log('Inserting randomized post with content:\n', content)
    #hits check_post_insert in the server side. 
  
  #try to insert a tag
  try_client_insert_tag: ->
    q = {'$set': {}}
    tag_text = 'gen_by_try_insert_tag'
    id = Posts.findOne()._id
    q['$set']["my_tags.#{tag_text}"] = 1
    Posts.update({ '_id': id}, q)
    #hits check_add_tag on server side.
    #TODO remove the tag in the end
  

  #try to update a tag
  try_client_update_tag: ->
    #insert a post
    #tag it as a random user
    #tag it as a different user
      #this should also graduate the tag until the graduation function is updated.
    #check_add_tag should be hit by this.
    #remove tag at the end.
    
  #try to gain points from tagging
  try_client_gain_points: ->
    tron.info( 'coming soon' )
    #TODO find a tag that has exactly one user listed, that is not me.
    #TODO tag
    #TODO check_if_user_exp should be hit by this.
  
tron.test( new ClientTests() )